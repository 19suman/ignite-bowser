import React, { useEffect, useState } from "react"
import { getStorybookUI, configure } from "@storybook/react-native"
<% if (props.useExpo) { -%>
import { initFonts } from "../app/theme/fonts"

declare global {
  let __TEST__
}
<% } -%>

declare var module

configure(() => {
  require("./storybook-registry")
}, module)

const StorybookUI = getStorybookUI({
  port: 9001,
  host: "localhost",
  onDeviceUI: true,
<% if (props.useExpo) { -%>
  asyncStorage: null
<% } else { -%>
  asyncStorage: require("@react-native-community/async-storage")
<% } -%>
})

export const StorybookUIRoot: React.FunctionComponent = () => {
  const [initialized, setInitialized] = useState(false)
  useEffect(() => {
    (async () => {
<% if (props.useExpo) { -%>
      await initFonts()
<% } -%>
      if (typeof __TEST__ === "undefined" || !__TEST__) {
        const Reactotron = require("../app/services/reactotron")
        const reactotron = new Reactotron.Reactotron()
        reactotron.setup()
      }
      setInitialized(true)
    })()
  }, [])

  return (initialized) ? <StorybookUI /> : null
}
